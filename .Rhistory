knitr::opts_chunk$set(echo = F, fig.align = "center", fig.pos = "H")
library(kableExtra)
knitr::opts_chunk$set(echo = F, fig.align = "center", fig.pos = "H")
library(kableExtra)
library(knitr)
library(leaps)
source("Functions.R")
library(tidyverse)
datos <- read.table("EquipoXX.txt", header = T)
knitr::opts_chunk$set(echo = F, fig.align = "center", fig.pos = "H")
library(kableExtra)
library(knitr)
library(leaps)
source("Functions.R")
library(tidyverse)
datos <- read.table("EquipoXX.txt", header = T)
clear
knitr::opts_chunk$set(echo = F, fig.align = "center", fig.pos = "H")
library(kableExtra)
library(knitr)
library(leaps)
source("Functions.R")
library(tidyverse)
datos <- read.table("EquipoXX.txt", header = T)
knitr::opts_chunk$set(echo = F, fig.align = "center", fig.pos = "H")
library(kableExtra)
library(knitr)
library(leaps)
source("Functions.R")
library(tidyverse)
datos <- read.table("Equipo29.txt", header = T)
modelo <- lm(Y ~ ., data = datos)
betas <- round(coef(modelo), 4)
betas1 <- as.data.frame(betas)
rownames(betas1) <- c("$\\beta_0$", "$\\beta_1$", "$\\beta_2$", "$\\beta_3$", "$\\beta_4$", "$\\beta_5$")
betas1 %>%
kable(col.names = c("Valor del parámetro"), caption = "Tabla de valores coeficientes del modelo", escape = F, booktab = T, align = "c", row.names = T) %>%
kable_styling(latex_options = c("HOLD_position"))
tabla.anova <- myAnova(modelo)
rownames(tabla.anova) <- c("Regresión", "Error")
tabla.anova %>%
kable(col.names = c("Sumas de cuadrados", "g.l.", "Cuadrado medio", "$F_0$", "P-valor"),caption = "Tabla  ANOVA para el modelo", escape=F, booktab=T, align = "c", row.names = T) %>%
kable_styling(latex_options = c("HOLD_position"))
tabla.coeficientes <- summary(modelo)$coefficients
rownames(tabla.coeficientes) <- paste("$\\beta_", 0:5, "$", sep = "")
tabla.coeficientes %>%
kable(col.names = c("$\\hat{\\beta_j}$", "$SE(\\hat{\\beta_j})$", "$T_{0j}$", "P-valor"),caption = "Resumen de los coeficientes", escape=F, booktab=T, align = "c", row.names = T, digits = 4) %>%
kable_styling(latex_options = c("HOLD_position"))
todas.regresiones <- myAllRegTable(modelo)
todas.regresiones <- todas.regresiones[c(31, 9), c(4, 6)]
row.names(todas.regresiones) <- c("Modelo  completo", "Modelo reducido")
todas.regresiones %>%
kable(col.names = c("$SSE$", "Covariables en el modelo"), caption = "Resumen tabla de todas las regresiones", escape=F, booktab=T, align = "c", row.names = T, digits = 4) %>%
kable_styling(latex_options = c("HOLD_position"))
myQQnorm(modelo, xlab = "Cuantiles teóricos",
ylab = "Cuantiles muestrales", pch=20)
res.stud <- round(rstandard(modelo), 4)
yhat <- round(modelo$fitted.values, 4)
plot(yhat, res.stud, xlab = "Valores Ajustados",
ylab = "Residuales Estudentizados", main = "Residuales Estudentizados vs Valores Ajustados", pch=20)
abline(h = 0, lty = 2, lwd = 2, col = 2)
Cooks.D <- round(cooks.distance(modelo), 4)
hii.value <- round(hatvalues(modelo), 4)
Dffits <- round(dffits(modelo), 4)
base.diagnostico <- data.frame(res.stud, Cooks.D, hii.value, Dffits)
with(base.diagnostico,
plot(res.stud, xlab="Observación", ylab = "Residuales",
main = "Residuales estudentizados", pch = 20, ylim=c(-5, 5)))
abline(h = 3, col="red", lty = "dashed")
abline(h =- 3, col="red", lty = "dashed")
atipicos.criterio <- 3
base.diagnostico[base.diagnostico$res.stud > atipicos.criterio | base.diagnostico$res.stud < -atipicos.criterio, ]
hii.criterio <- 2*(6/(nrow(datos)))
with(base.diagnostico,
plot(hii.value, xlab="Observación", ylab = "Valor hii",
main = "Gráfica de hii para las observaciones", pch = 20, ylim=c(-0.3, 0.3)))
abline(h = hii.criterio, col="red", lty = "dashed")
base.diagnostico[base.diagnostico$hii.value > hii.criterio, ]
criterio.cook <- 1
with(base.diagnostico,
plot(Cooks.D, xlab="Observación", ylab = "Distancia de Cook",
main = "Gráfica de distancias de Cook", pch = 20, ylim=c(-1.5, 1.5)))
abline(h = criterio.cook, col="red", lty = "dashed")
#base.diagnostico[base.diagnostico$Cooks.D > criterio.cook, ]
Dffits.criterio <- 2* (6/nrow(datos))^(1/2)
with(base.diagnostico,
plot(Dffits, xlab="Observación", ylab = "Dffit",
main = "Gráfica de observaciones vs Dffits", pch = 20, ylim=c(-2.1, 1.5)))
abline(h = Dffits.criterio, col="red", lty = "dashed")
abline(h = -Dffits.criterio, col="red", lty = "dashed")
base.diagnostico[base.diagnostico$Dffits > Dffits.criterio | base.diagnostico$Dffits < -Dffits.criterio, ]
kniy
install.packages("tinytex")
View(base.diagnostico)
View(todas.regresiones)
View(tabla.anova)
View(tabla.anova)
View(tabla.anova)
View(tabla.anova)
View(tabla.anova)
View(base.diagnostico)
View(betas1)
View(datos)
View(tabla.coeficientes)
View(todas.regresiones)
View(todas.regresiones)
View(todas.regresiones)
View(base.diagnostico)
View(betas1)
View(datos)
View(base.diagnostico)
View(tabla.anova)
View(todas.regresiones)
View(betas1)
View(tabla.anova)
# Instalación y carga de paquetes necesarios (DEBE TENER CONEXIÓN A INTERNET)
if(!require(leaps)){install.packages("leaps"); library(leaps)}
# Carga de funciones de usuario para RLM
source("Functions.R")
# Lectura de la base de datos asignada 'EquipoXX.txt' a traves del comando file.choose()
base <- read.table(file.choose(), header = T)
# Matriz de gráficas de dispersión con boxplots y correlaciones de las variables
pairs(base, lower.panel = myPanel.cor, upper.panel = panel.smooth, diag.panel = myPanel.box, labels = names(base))
# Mínimos y Máximos de cada variable
data.frame(apply(base, 2, range), row.names = c('min', 'max'))
# Definición del modelo de RLM, Tabla ANOVA y Tabla de parámetros estimados
modelo <- lm(Y ~ ., base)
myAnova(modelo)
summary(modelo)$coefficients
# Tabla de todas las regresiones posibles
myAllRegTable(modelo)
# Gráfica y prueba de normalidad de Shapiro-Wilk
myQQnorm(modelo)
# Cálculo de residuales estudentizados y valores ajustados
res.stud <- round(rstandard(modelo), 4)
yhat <- round(modelo$fitted.values, 4)
# Gráfica de Residuales estudentizados vs. Valores ajustados
plot(yhat, res.stud, xlab = "Valores Ajustados", ylab = "Residuales Estudentizados")
abline(h = 0, lty = 2, lwd = 2, col = 2)
## Diagnósticos para identificar valores extremos
# Cálculo de errores estándar de los valores ajustados
se.yhat <- round(predict(modelo, se.fit = T)$se.fit, 4)
# Residuales crudos del modelo
residuals <- round(modelo$residuals, 4)
# Distancias de Cook
Cooks.D <- round(cooks.distance(modelo), 4)
# Valores de la diagonal de la matriz H
hii.value <- round(hatvalues(modelo), 4)
# Dffits
Dffits <- round(dffits(modelo), 4)
# Tabla de diagnósticos
data.frame(base, yhat, se.yhat, residuals, res.stud, Cooks.D, hii.value, Dffits)
# Tabla de todas las regresiones posibles
myAllRegTable(modelo)
knitr::opts_chunk$set(echo = F, fig.align = "center", fig.pos = "H")
library(kableExtra)
library(knitr)
library(leaps)
source("Functions.R")
library(tidyverse)
datos <- read.table("Equipo29.txt", header = T)
modelo <- lm(Y ~ ., data = datos)
betas <- round(coef(modelo), 4)
betas1 <- as.data.frame(betas)
rownames(betas1) <- c("$\\beta_0$", "$\\beta_1$", "$\\beta_2$", "$\\beta_3$", "$\\beta_4$", "$\\beta_5$")
betas1 %>%
kable(col.names = c("Valor del parámetro"), caption = "Tabla de valores coeficientes del modelo", escape = F, booktab = T, align = "c", row.names = T) %>%
kable_styling(latex_options = c("HOLD_position"))
tabla.anova <- myAnova(modelo)
rownames(tabla.anova) <- c("Regresión", "Error")
tabla.anova %>%
kable(col.names = c("Sumas de cuadrados", "g.l.", "Cuadrado medio", "$F_0$", "P-valor"),caption = "Tabla  ANOVA para el modelo", escape=F, booktab=T, align = "c", row.names = T) %>%
kable_styling(latex_options = c("HOLD_position"))
tabla.coeficientes <- summary(modelo)$coefficients
rownames(tabla.coeficientes) <- paste("$\\beta_", 0:5, "$", sep = "")
tabla.coeficientes %>%
kable(col.names = c("$\\hat{\\beta_j}$", "$SE(\\hat{\\beta_j})$", "$T_{0j}$", "P-valor"),caption = "Resumen de los coeficientes", escape=F, booktab=T, align = "c", row.names = T, digits = 4) %>%
kable_styling(latex_options = c("HOLD_position"))
todas.regresiones <- myAllRegTable(modelo)
todas.regresiones <- todas.regresiones[c(31, 9), c(4, 6)]
row.names(todas.regresiones) <- c("Modelo  completo", "Modelo reducido")
todas.regresiones %>%
kable(col.names = c("$SSE$", "Covariables en el modelo"), caption = "Resumen tabla de todas las regresiones", escape=F, booktab=T, align = "c", row.names = T, digits = 4) %>%
kable_styling(latex_options = c("HOLD_position"))
myQQnorm(modelo, xlab = "Cuantiles teóricos",
ylab = "Cuantiles muestrales", pch=20)
res.stud <- round(rstandard(modelo), 4)
yhat <- round(modelo$fitted.values, 4)
plot(yhat, res.stud, xlab = "Valores Ajustados",
ylab = "Residuales Estudentizados", main = "Residuales Estudentizados vs Valores Ajustados", pch=20)
abline(h = 0, lty = 2, lwd = 2, col = 2)
Cooks.D <- round(cooks.distance(modelo), 4)
hii.value <- round(hatvalues(modelo), 4)
Dffits <- round(dffits(modelo), 4)
base.diagnostico <- data.frame(res.stud, Cooks.D, hii.value, Dffits)
with(base.diagnostico,
plot(res.stud, xlab="Observación", ylab = "Residuales",
main = "Residuales estudentizados", pch = 20, ylim=c(-5, 5)))
abline(h = 3, col="red", lty = "dashed")
abline(h =- 3, col="red", lty = "dashed")
atipicos.criterio <- 3
base.diagnostico[base.diagnostico$res.stud > atipicos.criterio | base.diagnostico$res.stud < -atipicos.criterio, ]
hii.criterio <- 2*(6/(nrow(datos)))
with(base.diagnostico,
plot(hii.value, xlab="Observación", ylab = "Valor hii",
main = "Gráfica de hii para las observaciones", pch = 20, ylim=c(-0.3, 0.3)))
abline(h = hii.criterio, col="red", lty = "dashed")
base.diagnostico[base.diagnostico$hii.value > hii.criterio, ]
criterio.cook <- 1
with(base.diagnostico,
plot(Cooks.D, xlab="Observación", ylab = "Distancia de Cook",
main = "Gráfica de distancias de Cook", pch = 20, ylim=c(-1.5, 1.5)))
abline(h = criterio.cook, col="red", lty = "dashed")
#base.diagnostico[base.diagnostico$Cooks.D > criterio.cook, ]
Dffits.criterio <- 2* (6/nrow(datos))^(1/2)
with(base.diagnostico,
plot(Dffits, xlab="Observación", ylab = "Dffit",
main = "Gráfica de observaciones vs Dffits", pch = 20, ylim=c(-2.1, 1.5)))
abline(h = Dffits.criterio, col="red", lty = "dashed")
abline(h = -Dffits.criterio, col="red", lty = "dashed")
base.diagnostico[base.diagnostico$Dffits > Dffits.criterio | base.diagnostico$Dffits < -Dffits.criterio, ]
# Instalación y carga de paquetes necesarios (DEBE TENER CONEXIÓN A INTERNET)
if(!require(leaps)){install.packages("leaps"); library(leaps)}
# Carga de funciones de usuario para RLM
source("Functions.R")
# Lectura de la base de datos asignada 'EquipoXX.txt' a traves del comando file.choose()
base <- read.table(file.choose(), header = T)
# Matriz de gráficas de dispersión con boxplots y correlaciones de las variables
pairs(base, lower.panel = myPanel.cor, upper.panel = panel.smooth, diag.panel = myPanel.box, labels = names(base))
# Mínimos y Máximos de cada variable
data.frame(apply(base, 2, range), row.names = c('min', 'max'))
# Definición del modelo de RLM, Tabla ANOVA y Tabla de parámetros estimados
modelo <- lm(Y ~ ., base)
myAnova(modelo)
summary(modelo)$coefficients
# Tabla de todas las regresiones posibles
myAllRegTable(modelo)
# Gráfica y prueba de normalidad de Shapiro-Wilk
myQQnorm(modelo)
# Cálculo de residuales estudentizados y valores ajustados
res.stud <- round(rstandard(modelo), 4)
yhat <- round(modelo$fitted.values, 4)
# Gráfica de Residuales estudentizados vs. Valores ajustados
plot(yhat, res.stud, xlab = "Valores Ajustados", ylab = "Residuales Estudentizados")
abline(h = 0, lty = 2, lwd = 2, col = 2)
## Diagnósticos para identificar valores extremos
# Cálculo de errores estándar de los valores ajustados
se.yhat <- round(predict(modelo, se.fit = T)$se.fit, 4)
# Residuales crudos del modelo
residuals <- round(modelo$residuals, 4)
# Distancias de Cook
Cooks.D <- round(cooks.distance(modelo), 4)
# Valores de la diagonal de la matriz H
hii.value <- round(hatvalues(modelo), 4)
# Dffits
Dffits <- round(dffits(modelo), 4)
# Tabla de diagnósticos
data.frame(base, yhat, se.yhat, residuals, res.stud, Cooks.D, hii.value, Dffits)
summary(modelo)$coefficients
View(base)
View(tabla.anova)
View(betas1)
# Definición del modelo de RLM, Tabla ANOVA y Tabla de parámetros estimados
modelo <- lm(Y ~ ., base)
myAnova(modelo)
summary(modelo)$coefficients
View(tabla.anova)
todas.regresiones
todas.regresiones
myAllRegTable()
myAllRegTable(modelo)
View(tabla.anova)
qf(0.05,3,63)
qf(0.95,3,63)
